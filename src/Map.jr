import java.lang.Math;
public class Map {
    final int height = 12;
    final int width = 12;
    final int scale = 1; // block size.don't change this. Everything else is fractional now
    int deltaX;
    int deltaY;
    
    public final int[][] terrain = {
        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
        {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1},
        {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    };

    //public int validMove(int x, int y) {
        //if (x >= width) return 1;
        //else if (y >= height) return 2;
        //else if (x < 1) return 3;
        //else if (y < 1) return 4;
        //else if (terrain[y][x] == 1) return 5;
        //else return 0;
    //}
//
    //public int validX(int currX, int currY, int newX) {
        //deltaX = (newX > currX) ? 1 : -1;
        //if (newX >= width) return width-1;
        //else if (newX < 1) return 1;
//
        //for (int i = currX+deltaX; i < width; i=i+deltaX) {
            //if ((terrain[currY][i]) == 1) return i;
        //}
        //return 0;
    //}
//
    //public int validY(int currX, int currY, int newY) {
        //deltaX = (newX > currX) ? 1 : -1;
        //if (newX >= width) return width-1;
        //else if (newX < 1) return 1;
//
        //for (int i = currY+deltaY; i < height; i=i+deltaY) {
            //if ((terrain[i][currX]) == 1) return i;
        //}
        //return 0;
    //}
}